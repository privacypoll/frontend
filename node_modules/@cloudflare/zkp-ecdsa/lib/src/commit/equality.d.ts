import { Commitment, PedersenParams } from './pedersen.js';
import { Group } from '../curves/group.js';
import { MultiMult } from '../curves/multimult.js';
export declare class EqualityProof {
    A_1: Group.Point;
    A_2: Group.Point;
    t_x: Group.Scalar;
    t_r1: Group.Scalar;
    t_r2: Group.Scalar;
    constructor(A_1: Group.Point, A_2: Group.Point, t_x: Group.Scalar, t_r1: Group.Scalar, t_r2: Group.Scalar);
    eq(o: EqualityProof): boolean;
}
export declare function proveEquality(params: PedersenParams, x: bigint, C1: Commitment, C2: Commitment): Promise<EqualityProof>;
export declare function verifyEquality(params: PedersenParams, C1: Group.Point, C2: Group.Point, pi: EqualityProof): Promise<boolean>;
export declare function aggregateEquality(params: PedersenParams, C1: Group.Point, C2: Group.Point, pi: EqualityProof, multi: MultiMult): Promise<boolean>;
//# sourceMappingURL=equality.d.ts.map