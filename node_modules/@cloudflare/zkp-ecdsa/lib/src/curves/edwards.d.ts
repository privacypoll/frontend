import { Group } from './group.js';
export declare class TEdwards extends Group {
    readonly name: string;
    readonly p: bigint;
    readonly a: bigint;
    readonly d: bigint;
    readonly order: bigint;
    readonly gen: [bigint, bigint];
    readonly _brandTEdwards = "";
    constructor(name: string, p: bigint, a: bigint, d: bigint, order: bigint, gen: [bigint, bigint]);
    identity(): TEdwardsPoint;
    generator(): TEdwardsPoint;
    isOnGroup(pt: TEdwardsPoint): boolean;
    sizePointBytes(): number;
    deserializePoint(bytes: Uint8Array): TEdwardsPoint;
}
export declare class TEdwardsPoint extends Group.Point {
    readonly _brandTEdwardsPoint = "";
    readonly group: TEdwards;
    x: bigint;
    y: bigint;
    z: bigint;
    t: bigint;
    constructor(g: TEdwards, x: bigint, y: bigint, t?: bigint, z?: bigint);
    toString(): string;
    isIdentity(): boolean;
    eq(pt: TEdwardsPoint): boolean;
    neg(): this;
    dbl(): this;
    add(pt: this): this;
    toAffine(): {
        x: bigint;
        y: bigint;
    };
    toBytes(): Uint8Array;
    protected afterJson(): void;
}
//# sourceMappingURL=edwards.d.ts.map