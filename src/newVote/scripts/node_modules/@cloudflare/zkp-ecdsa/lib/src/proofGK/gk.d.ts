import { Commitment, PedersenParams } from '../commit/pedersen.js';
import { Group } from '../curves/group.js';
export declare class GKProof {
    cl: Group.Point[];
    ca: Group.Point[];
    cb: Group.Point[];
    cd: Group.Point[];
    f: Group.Scalar[];
    za: Group.Scalar[];
    zb: Group.Scalar[];
    zd: Group.Scalar;
    constructor(cl: Group.Point[], ca: Group.Point[], cb: Group.Point[], cd: Group.Point[], f: Group.Scalar[], za: Group.Scalar[], zb: Group.Scalar[], zd: Group.Scalar);
    eq(o: GKProof): boolean;
}
export declare function proveMembership(params: PedersenParams, com: Commitment, index: number, initialValues: bigint[]): Promise<GKProof>;
export declare function verifyMembership(params: PedersenParams, com: Group.Point, initVec: bigint[], proof: GKProof): Promise<boolean>;
//# sourceMappingURL=gk.d.ts.map